version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.11

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12.9.1-browsers

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .
  install_dependencies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Run tests
          command: npm run test

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Build website
          command: npm run build
      - store_artifacts:
          path: ./build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  deploy_production:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-s3/sync:
          from: ./build
          to: $S3_BUCKET_URL_PROD
          overwrite: true

workflows:
  build-and-deploy:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - install_dependencies
      - build:
          requires:
            - test
      - deploy_production:
          context: oneleif-aws
          requires:
            - build
